-- Add extra context columns to get potential grouiping keys
    WITH season AS (SELECT 
            s.*,
                f.franchise_id,
                f.league,
                f.division,
                f.location,
                f.nickname,
                f.alternative_nicknames,
                f.date_start,
                f.date_end,
                f.city,
                f.state,
        FROM "timeball"."main_models"."player_team_season_offense_stats" AS s
        LEFT JOIN "timeball"."main_seeds"."seed_franchises" AS f
            ON s.team_id = f.team_id
            AND s.season BETWEEN EXTRACT(YEAR FROM f.date_start) AND COALESCE(EXTRACT(YEAR FROM f.date_end), 9999)
    ),
    event AS (SELECT 
            e.*,
                g.opponent_id,
                g.league,
                g.opponent_league,
                g.division,
                g.opponent_division,
                g.team_name,
                g.opponent_name,
                g.starting_pitcher_id,
                g.opponent_starting_pitcher_id,
                g.team_side,
                g.date,
                g.start_time,
                g.season,
                g.doubleheader_status,
                g.time_of_day,
                g.game_type,
                g.bat_first_side,
                g.sky,
                g.field_condition,
                g.precipitation,
                g.wind_direction,
                g.park_id,
                g.temperature_fahrenheit,
                g.attendance,
                g.wind_speed_mph,
                g.use_dh,
                g.scorer,
                g.scoring_method,
                g.source_type,
                g.umpire_home_id,
                g.umpire_first_id,
                g.umpire_second_id,
                g.umpire_third_id,
                g.umpire_left_id,
                g.umpire_right_id,
                g.filename,
                g.is_regular_season,
                g.is_postseason,
                g.is_integrated,
                g.is_negro_leagues,
                g.is_segregated_white,
                g.away_franchise_id,
                g.home_franchise_id,
                g.is_interleague,
                g.lineup_map_away,
                g.lineup_map_home,
                g.fielding_map_away,
                g.fielding_map_home,
                g.series_id,
                g.season_game_number,
                g.series_game_number,
                g.days_since_last_game,
        FROM "timeball"."main_models"."event_offense_stats" AS e
        LEFT JOIN "timeball"."main_models"."team_game_start_info" AS g USING (team_id, game_id)
    ),
    -- Need to use the season table for basic stats/metrics to ensure full coverage...
    basic_stats AS (
        SELECT
            player_id,
            SUM(games) AS games,
            SUM(plate_appearances) AS plate_appearances,
            SUM(at_bats) AS at_bats,
            SUM(hits) AS hits,
            SUM(singles) AS singles,
            SUM(doubles) AS doubles,
            SUM(triples) AS triples,
            SUM(home_runs) AS home_runs,
            SUM(total_bases) AS total_bases,
            SUM(strikeouts) AS strikeouts,
            SUM(walks) AS walks,
            SUM(intentional_walks) AS intentional_walks,
            SUM(hit_by_pitches) AS hit_by_pitches,
            SUM(sacrifice_hits) AS sacrifice_hits,
            SUM(sacrifice_flies) AS sacrifice_flies,
            SUM(reached_on_errors) AS reached_on_errors,
            SUM(reached_on_interferences) AS reached_on_interferences,
            SUM(inside_the_park_home_runs) AS inside_the_park_home_runs,
            SUM(ground_rule_doubles) AS ground_rule_doubles,
            SUM(infield_hits) AS infield_hits,
            SUM(on_base_opportunities) AS on_base_opportunities,
            SUM(on_base_successes) AS on_base_successes,
            SUM(runs_batted_in) AS runs_batted_in,
            SUM(grounded_into_double_plays) AS grounded_into_double_plays,
            SUM(double_plays) AS double_plays,
            SUM(triple_plays) AS triple_plays,
            SUM(batting_outs) AS batting_outs,
            SUM(balls_in_play) AS balls_in_play,
            SUM(balls_batted) AS balls_batted,
            SUM(trajectory_fly_ball) AS trajectory_fly_ball,
            SUM(trajectory_ground_ball) AS trajectory_ground_ball,
            SUM(trajectory_line_drive) AS trajectory_line_drive,
            SUM(trajectory_pop_up) AS trajectory_pop_up,
            SUM(trajectory_unknown) AS trajectory_unknown,
            SUM(trajectory_known) AS trajectory_known,
            SUM(trajectory_broad_air_ball) AS trajectory_broad_air_ball,
            SUM(trajectory_broad_ground_ball) AS trajectory_broad_ground_ball,
            SUM(trajectory_broad_unknown) AS trajectory_broad_unknown,
            SUM(trajectory_broad_known) AS trajectory_broad_known,
            SUM(bunts) AS bunts,
            SUM(batted_distance_plate) AS batted_distance_plate,
            SUM(batted_distance_infield) AS batted_distance_infield,
            SUM(batted_distance_outfield) AS batted_distance_outfield,
            SUM(batted_distance_unknown) AS batted_distance_unknown,
            SUM(batted_distance_known) AS batted_distance_known,
            SUM(fielded_by_battery) AS fielded_by_battery,
            SUM(fielded_by_infielder) AS fielded_by_infielder,
            SUM(fielded_by_outfielder) AS fielded_by_outfielder,
            SUM(fielded_by_known) AS fielded_by_known,
            SUM(fielded_by_unknown) AS fielded_by_unknown,
            SUM(batted_angle_left) AS batted_angle_left,
            SUM(batted_angle_right) AS batted_angle_right,
            SUM(batted_angle_middle) AS batted_angle_middle,
            SUM(batted_angle_unknown) AS batted_angle_unknown,
            SUM(batted_angle_known) AS batted_angle_known,
            SUM(batted_location_plate) AS batted_location_plate,
            SUM(batted_location_right_infield) AS batted_location_right_infield,
            SUM(batted_location_middle_infield) AS batted_location_middle_infield,
            SUM(batted_location_left_infield) AS batted_location_left_infield,
            SUM(batted_location_left_field) AS batted_location_left_field,
            SUM(batted_location_center_field) AS batted_location_center_field,
            SUM(batted_location_right_field) AS batted_location_right_field,
            SUM(batted_location_unknown) AS batted_location_unknown,
            SUM(batted_location_known) AS batted_location_known,
            SUM(batted_balls_pulled) AS batted_balls_pulled,
            SUM(batted_balls_opposite_field) AS batted_balls_opposite_field,
            SUM(runs) AS runs,
            SUM(times_reached_base) AS times_reached_base,
            SUM(stolen_bases) AS stolen_bases,
            SUM(caught_stealing) AS caught_stealing,
            SUM(picked_off) AS picked_off,
            SUM(picked_off_caught_stealing) AS picked_off_caught_stealing,
            SUM(outs_on_basepaths) AS outs_on_basepaths,
            SUM(unforced_outs_on_basepaths) AS unforced_outs_on_basepaths,
            SUM(outs_avoided_on_errors) AS outs_avoided_on_errors,
            SUM(advances_on_wild_pitches) AS advances_on_wild_pitches,
            SUM(advances_on_passed_balls) AS advances_on_passed_balls,
            SUM(advances_on_balks) AS advances_on_balks,
            SUM(advances_on_unspecified_plays) AS advances_on_unspecified_plays,
            SUM(advances_on_defensive_indifference) AS advances_on_defensive_indifference,
            SUM(advances_on_errors) AS advances_on_errors,
            SUM(plate_appearances_while_on_base) AS plate_appearances_while_on_base,
            SUM(balls_in_play_while_running) AS balls_in_play_while_running,
            SUM(balls_in_play_while_on_base) AS balls_in_play_while_on_base,
            SUM(batter_total_bases_while_running) AS batter_total_bases_while_running,
            SUM(batter_total_bases_while_on_base) AS batter_total_bases_while_on_base,
            SUM(extra_base_advance_attempts) AS extra_base_advance_attempts,
            SUM(bases_advanced) AS bases_advanced,
            SUM(bases_advanced_on_balls_in_play) AS bases_advanced_on_balls_in_play,
            SUM(surplus_bases_advanced_on_balls_in_play) AS surplus_bases_advanced_on_balls_in_play,
            SUM(outs_on_extra_base_advance_attempts) AS outs_on_extra_base_advance_attempts,
            SUM(pitches) AS pitches,
            SUM(swings) AS swings,
            SUM(swings_with_contact) AS swings_with_contact,
            SUM(strikes) AS strikes,
            SUM(strikes_called) AS strikes_called,
            SUM(strikes_swinging) AS strikes_swinging,
            SUM(strikes_foul) AS strikes_foul,
            SUM(strikes_foul_tip) AS strikes_foul_tip,
            SUM(strikes_in_play) AS strikes_in_play,
            SUM(strikes_unknown) AS strikes_unknown,
            SUM(balls) AS balls,
            SUM(balls_called) AS balls_called,
            SUM(balls_intentional) AS balls_intentional,
            SUM(balls_automatic) AS balls_automatic,
            SUM(unknown_pitches) AS unknown_pitches,
            SUM(pitchouts) AS pitchouts,
            SUM(pitcher_pickoff_attempts) AS pitcher_pickoff_attempts,
            SUM(catcher_pickoff_attempts) AS catcher_pickoff_attempts,
            SUM(pitches_blocked_by_catcher) AS pitches_blocked_by_catcher,
            SUM(pitches_with_runners_going) AS pitches_with_runners_going,
            SUM(passed_balls) AS passed_balls,
            SUM(wild_pitches) AS wild_pitches,
            SUM(balks) AS balks,
            SUM(left_on_base) AS left_on_base,
            SUM(left_on_base_with_two_outs) AS left_on_base_with_two_outs,
            SUM(stolen_bases_second) AS stolen_bases_second,
            SUM(stolen_bases_third) AS stolen_bases_third,
            SUM(stolen_bases_home) AS stolen_bases_home,
            SUM(caught_stealing_second) AS caught_stealing_second,
            SUM(caught_stealing_third) AS caught_stealing_third,
            SUM(caught_stealing_home) AS caught_stealing_home,
            SUM(stolen_base_opportunities) AS stolen_base_opportunities,
            SUM(stolen_base_opportunities_second) AS stolen_base_opportunities_second,
            SUM(stolen_base_opportunities_third) AS stolen_base_opportunities_third,
            SUM(stolen_base_opportunities_home) AS stolen_base_opportunities_home,
            SUM(picked_off_first) AS picked_off_first,
            SUM(picked_off_second) AS picked_off_second,
            SUM(picked_off_third) AS picked_off_third,
            SUM(times_force_on_runner) AS times_force_on_runner,
            SUM(times_lead_runner) AS times_lead_runner,
            SUM(times_next_base_empty) AS times_next_base_empty,
            SUM(extra_base_chances) AS extra_base_chances,
            SUM(extra_bases_taken) AS extra_bases_taken,
            SUM(hits) / SUM(at_bats) AS batting_average,
            SUM(on_base_successes) / SUM(on_base_opportunities) AS on_base_percentage,
            SUM(total_bases) / SUM(at_bats) AS slugging_percentage,
            SUM(on_base_successes) / SUM(on_base_opportunities) + SUM(total_bases) / SUM(at_bats) AS on_base_plus_slugging,
            SUM(total_bases) / SUM(at_bats) - SUM(hits) / SUM(at_bats) AS isolated_power,
            SUM(total_bases - hits + walks + stolen_bases - caught_stealing) / SUM(at_bats) AS secondary_average,
            SUM(hits - home_runs) / (SUM(at_bats) - SUM(home_runs) - SUM(strikeouts) + SUM(COALESCE(sacrifice_flies, 0))) AS batting_average_on_balls_in_play,
            SUM(home_runs) / SUM(plate_appearances) AS home_run_rate,
            SUM(walks) / SUM(plate_appearances) AS walk_rate,
            SUM(strikeouts) / SUM(plate_appearances) AS strikeout_rate,
            SUM(stolen_bases) / SUM(stolen_bases + caught_stealing) AS stolen_base_percentage,FROM season
        
        WHERE game_type IN (SELECT game_type FROM "timeball"."main_seeds"."seed_game_types" WHERE is_regular_season)
        
        GROUP BY player_id
    ),

    --- ...but we need to use the event table for event-based metrics,
    event_agg AS (
        SELECT
            player_id,
            COUNT(DISTINCT game_id) AS games,
            SUM(trajectory_known * balls_batted * (at_bats - hits)) / SUM(balls_batted * (at_bats - hits)) AS known_trajectory_rate_outs,
            SUM(trajectory_known * balls_batted * hits) / SUM(balls_batted * hits) AS known_trajectory_rate_hits,
            SUM(trajectory_known * balls_batted) / SUM(balls_batted) AS known_trajectory_rate,
            SUM(trajectory_broad_known * balls_batted * (at_bats - hits)) / SUM(balls_batted * (at_bats - hits)) AS known_trajectory_broad_rate_outs,
            SUM(trajectory_broad_known * balls_batted * hits) / SUM(balls_batted * hits) AS known_trajectory_broad_rate_hits,
            SUM(trajectory_broad_known * balls_batted) / SUM(balls_batted) AS known_trajectory_broad_rate,
            known_trajectory_rate_outs / known_trajectory_rate_hits AS known_trajectory_out_hit_ratio,
            known_trajectory_broad_rate_outs / known_trajectory_broad_rate_hits AS known_trajectory_broad_out_hit_ratio,
            SUM(trajectory_broad_air_ball * (at_bats - hits)) / SUM(trajectory_broad_known * (at_bats - hits)) AS air_ball_rate_outs,
            SUM(trajectory_broad_ground_ball * (at_bats - hits)) / SUM(trajectory_broad_known * (at_bats - hits)) AS ground_ball_rate_outs,
            ground_ball_rate_outs / air_ball_rate_outs AS ground_air_out_ratio,
            SUM(trajectory_broad_air_ball * hits) / SUM(trajectory_broad_known * hits) AS air_ball_hit_rate,
            SUM(trajectory_broad_ground_ball * hits) / SUM(trajectory_broad_known * hits) AS ground_ball_hit_rate,
            ground_ball_hit_rate / air_ball_hit_rate AS ground_air_hit_ratio,
            SUM(trajectory_fly_ball) / SUM(trajectory_known) AS fly_ball_rate,
            SUM(trajectory_line_drive) / SUM(trajectory_known) AS line_drive_rate,
            SUM(trajectory_pop_up) / SUM(trajectory_known) AS pop_up_rate,
            SUM(trajectory_ground_ball) / SUM(trajectory_broad_known) AS ground_ball_rate,
            SUM(trajectory_broad_air_ball * hits) * known_trajectory_broad_out_hit_ratio / (SUM(trajectory_broad_air_ball * hits) * known_trajectory_broad_out_hit_ratio + SUM(trajectory_broad_air_ball * (at_bats - hits))) AS coverage_weighted_air_ball_batting_average,
            SUM(trajectory_ground_ball * hits) * known_trajectory_broad_out_hit_ratio / (SUM(trajectory_ground_ball * hits) * known_trajectory_broad_out_hit_ratio + SUM(trajectory_ground_ball * (at_bats - hits))) AS coverage_weighted_ground_ball_batting_average,
            SUM(trajectory_fly_ball * hits) * known_trajectory_out_hit_ratio / (SUM(trajectory_fly_ball * hits) * known_trajectory_out_hit_ratio + SUM(trajectory_fly_ball * (at_bats - hits))) AS coverage_weighted_fly_ball_batting_average,
            SUM(trajectory_line_drive * hits) * known_trajectory_out_hit_ratio / (SUM(trajectory_line_drive * hits) * known_trajectory_out_hit_ratio + SUM(trajectory_line_drive * (at_bats - hits))) AS coverage_weighted_line_drive_batting_average,
            SUM(trajectory_pop_up * hits) * known_trajectory_out_hit_ratio / (SUM(trajectory_pop_up * hits) * known_trajectory_out_hit_ratio + SUM(trajectory_pop_up * (at_bats - hits))) AS coverage_weighted_pop_up_batting_average,
            SUM(batted_angle_known * (at_bats - hits)) / SUM(balls_batted * (at_bats - hits)) AS known_angle_rate_outs,
            SUM(batted_angle_known * hits) / SUM(hits) AS known_angle_rate_hits,
            SUM(batted_angle_known) / SUM(balls_batted) AS known_angle_rate,
            known_angle_rate_outs / known_angle_rate_hits AS known_angle_out_hit_ratio,
            SUM(batted_angle_left * (at_bats - hits)) / SUM(batted_angle_known * (at_bats - hits)) AS angle_left_rate_outs,
            SUM(batted_angle_left * hits) / SUM(batted_angle_known * hits) AS angle_left_rate_hits,
            SUM(batted_angle_left) / SUM(batted_angle_known) AS angle_left_rate,
            SUM(batted_angle_left * hits) * known_angle_out_hit_ratio / (SUM(batted_angle_left * hits) * known_angle_out_hit_ratio + SUM(batted_angle_left * (at_bats - hits))) AS coverage_weighted_angle_left_batting_average,
            SUM(batted_angle_right * (at_bats - hits)) / SUM(batted_angle_known * (at_bats - hits)) AS angle_right_rate_outs,
            SUM(batted_angle_right * hits) / SUM(batted_angle_known * hits) AS angle_right_rate_hits,
            SUM(batted_angle_right) / SUM(batted_angle_known) AS angle_right_rate,
            SUM(batted_angle_right * hits) * known_angle_out_hit_ratio / (SUM(batted_angle_right * hits) * known_angle_out_hit_ratio + SUM(batted_angle_right * (at_bats - hits))) AS coverage_weighted_angle_right_batting_average,
            SUM(batted_angle_middle * (at_bats - hits)) / SUM(batted_angle_known * (at_bats - hits)) AS angle_middle_rate_outs,
            SUM(batted_angle_middle * hits) / SUM(batted_angle_known * hits) AS angle_middle_rate_hits,
            SUM(batted_angle_middle) / SUM(batted_angle_known) AS angle_middle_rate,
            SUM(batted_angle_middle * hits) * known_angle_out_hit_ratio / (SUM(batted_angle_middle * hits) * known_angle_out_hit_ratio + SUM(batted_angle_middle * (at_bats - hits))) AS coverage_weighted_angle_middle_batting_average,
            SUM(batted_balls_pulled * (at_bats - hits)) / SUM(batted_angle_known * (at_bats - hits)) AS pulled_rate_outs,
            SUM(batted_balls_pulled * hits) / SUM(batted_angle_known * hits) AS pulled_rate_hits,
            SUM(batted_balls_pulled) / SUM(batted_angle_known) AS pulled_rate,
            SUM(batted_balls_pulled * hits) * known_angle_out_hit_ratio / (SUM(batted_balls_pulled * hits) * known_angle_out_hit_ratio + SUM(batted_balls_pulled * (at_bats - hits))) AS coverage_weighted_pulled_batting_average,
            SUM(batted_balls_opposite_field * (at_bats - hits)) / SUM(batted_angle_known * (at_bats - hits)) AS opposite_field_rate_outs,
            SUM(batted_balls_opposite_field * hits) / SUM(batted_angle_known * hits) AS opposite_field_rate_hits,
            SUM(batted_balls_opposite_field) / SUM(batted_angle_known) AS opposite_field_rate,
            SUM(batted_balls_opposite_field * hits) * known_angle_out_hit_ratio / (SUM(batted_balls_opposite_field * hits) * known_angle_out_hit_ratio + SUM(batted_balls_opposite_field * (at_bats - hits))) AS coverage_weighted_opposite_field_batting_average,
            SUM(stolen_bases_second + caught_stealing_second) / SUM(stolen_base_opportunities_second) AS stolen_base_attempt_rate_second,
            SUM(stolen_bases_third + caught_stealing_third) / SUM(stolen_base_opportunities_third) AS stolen_base_attempt_rate_third,
            SUM(stolen_bases_home + caught_stealing_home) / SUM(stolen_base_opportunities_home) AS stolen_base_attempt_rate_home,
            SUM(unforced_outs_on_basepaths) / SUM(times_reached_base) AS unforced_out_rate,
            SUM(strikes) / SUM(pitches) AS pitch_strike_rate,
            SUM(swings_with_contact) / SUM(pitches) AS pitch_contact_rate,
            SUM(swings_with_contact + strikes_swinging) / SUM(pitches) AS pitch_swing_rate,
            SUM(balls) / SUM(pitches) AS pitch_ball_rate,
            SUM(strikes_swinging) / SUM(pitches) AS pitch_swing_and_miss_rate,
            SUM(strikes_foul) / SUM(pitches) AS pitch_foul_rate,
            SUM(strikes_called) / SUM(pitches) AS pitched_called_strike_rate,
            COUNT_IF(pitches > 0) / SUM(plate_appearances) AS pitch_data_coverage_rate,FROM event
        
        WHERE game_id IN (SELECT game_id FROM "timeball"."main_models"."game_start_info" WHERE is_regular_season)
        
        GROUP BY player_id
    ),

    final AS (
        SELECT
            player_id,
            basic_stats.plate_appearances::INT AS plate_appearances,
            basic_stats.at_bats::INT AS at_bats,
            basic_stats.hits::INT AS hits,
            basic_stats.singles::INT AS singles,
            basic_stats.doubles::INT AS doubles,
            basic_stats.triples::INT AS triples,
            basic_stats.home_runs::INT AS home_runs,
            basic_stats.total_bases::INT AS total_bases,
            basic_stats.strikeouts::INT AS strikeouts,
            basic_stats.walks::INT AS walks,
            basic_stats.intentional_walks::INT AS intentional_walks,
            basic_stats.hit_by_pitches::INT AS hit_by_pitches,
            basic_stats.sacrifice_hits::INT AS sacrifice_hits,
            basic_stats.sacrifice_flies::INT AS sacrifice_flies,
            basic_stats.reached_on_errors::INT AS reached_on_errors,
            basic_stats.reached_on_interferences::INT AS reached_on_interferences,
            basic_stats.inside_the_park_home_runs::INT AS inside_the_park_home_runs,
            basic_stats.ground_rule_doubles::INT AS ground_rule_doubles,
            basic_stats.infield_hits::INT AS infield_hits,
            basic_stats.on_base_opportunities::INT AS on_base_opportunities,
            basic_stats.on_base_successes::INT AS on_base_successes,
            basic_stats.runs_batted_in::INT AS runs_batted_in,
            basic_stats.grounded_into_double_plays::INT AS grounded_into_double_plays,
            basic_stats.double_plays::INT AS double_plays,
            basic_stats.triple_plays::INT AS triple_plays,
            basic_stats.batting_outs::INT AS batting_outs,
            basic_stats.balls_in_play::INT AS balls_in_play,
            basic_stats.balls_batted::INT AS balls_batted,
            basic_stats.trajectory_fly_ball::INT AS trajectory_fly_ball,
            basic_stats.trajectory_ground_ball::INT AS trajectory_ground_ball,
            basic_stats.trajectory_line_drive::INT AS trajectory_line_drive,
            basic_stats.trajectory_pop_up::INT AS trajectory_pop_up,
            basic_stats.trajectory_unknown::INT AS trajectory_unknown,
            basic_stats.trajectory_known::INT AS trajectory_known,
            basic_stats.trajectory_broad_air_ball::INT AS trajectory_broad_air_ball,
            basic_stats.trajectory_broad_ground_ball::INT AS trajectory_broad_ground_ball,
            basic_stats.trajectory_broad_unknown::INT AS trajectory_broad_unknown,
            basic_stats.trajectory_broad_known::INT AS trajectory_broad_known,
            basic_stats.bunts::INT AS bunts,
            basic_stats.batted_distance_plate::INT AS batted_distance_plate,
            basic_stats.batted_distance_infield::INT AS batted_distance_infield,
            basic_stats.batted_distance_outfield::INT AS batted_distance_outfield,
            basic_stats.batted_distance_unknown::INT AS batted_distance_unknown,
            basic_stats.batted_distance_known::INT AS batted_distance_known,
            basic_stats.fielded_by_battery::INT AS fielded_by_battery,
            basic_stats.fielded_by_infielder::INT AS fielded_by_infielder,
            basic_stats.fielded_by_outfielder::INT AS fielded_by_outfielder,
            basic_stats.fielded_by_known::INT AS fielded_by_known,
            basic_stats.fielded_by_unknown::INT AS fielded_by_unknown,
            basic_stats.batted_angle_left::INT AS batted_angle_left,
            basic_stats.batted_angle_right::INT AS batted_angle_right,
            basic_stats.batted_angle_middle::INT AS batted_angle_middle,
            basic_stats.batted_angle_unknown::INT AS batted_angle_unknown,
            basic_stats.batted_angle_known::INT AS batted_angle_known,
            basic_stats.batted_location_plate::INT AS batted_location_plate,
            basic_stats.batted_location_right_infield::INT AS batted_location_right_infield,
            basic_stats.batted_location_middle_infield::INT AS batted_location_middle_infield,
            basic_stats.batted_location_left_infield::INT AS batted_location_left_infield,
            basic_stats.batted_location_left_field::INT AS batted_location_left_field,
            basic_stats.batted_location_center_field::INT AS batted_location_center_field,
            basic_stats.batted_location_right_field::INT AS batted_location_right_field,
            basic_stats.batted_location_unknown::INT AS batted_location_unknown,
            basic_stats.batted_location_known::INT AS batted_location_known,
            basic_stats.batted_balls_pulled::INT AS batted_balls_pulled,
            basic_stats.batted_balls_opposite_field::INT AS batted_balls_opposite_field,
            basic_stats.runs::INT AS runs,
            basic_stats.times_reached_base::INT AS times_reached_base,
            basic_stats.stolen_bases::INT AS stolen_bases,
            basic_stats.caught_stealing::INT AS caught_stealing,
            basic_stats.picked_off::INT AS picked_off,
            basic_stats.picked_off_caught_stealing::INT AS picked_off_caught_stealing,
            basic_stats.outs_on_basepaths::INT AS outs_on_basepaths,
            basic_stats.unforced_outs_on_basepaths::INT AS unforced_outs_on_basepaths,
            basic_stats.outs_avoided_on_errors::INT AS outs_avoided_on_errors,
            basic_stats.advances_on_wild_pitches::INT AS advances_on_wild_pitches,
            basic_stats.advances_on_passed_balls::INT AS advances_on_passed_balls,
            basic_stats.advances_on_balks::INT AS advances_on_balks,
            basic_stats.advances_on_unspecified_plays::INT AS advances_on_unspecified_plays,
            basic_stats.advances_on_defensive_indifference::INT AS advances_on_defensive_indifference,
            basic_stats.advances_on_errors::INT AS advances_on_errors,
            basic_stats.plate_appearances_while_on_base::INT AS plate_appearances_while_on_base,
            basic_stats.balls_in_play_while_running::INT AS balls_in_play_while_running,
            basic_stats.balls_in_play_while_on_base::INT AS balls_in_play_while_on_base,
            basic_stats.batter_total_bases_while_running::INT AS batter_total_bases_while_running,
            basic_stats.batter_total_bases_while_on_base::INT AS batter_total_bases_while_on_base,
            basic_stats.extra_base_advance_attempts::INT AS extra_base_advance_attempts,
            basic_stats.bases_advanced::INT AS bases_advanced,
            basic_stats.bases_advanced_on_balls_in_play::INT AS bases_advanced_on_balls_in_play,
            basic_stats.surplus_bases_advanced_on_balls_in_play::INT AS surplus_bases_advanced_on_balls_in_play,
            basic_stats.outs_on_extra_base_advance_attempts::INT AS outs_on_extra_base_advance_attempts,
            basic_stats.pitches::INT AS pitches,
            basic_stats.swings::INT AS swings,
            basic_stats.swings_with_contact::INT AS swings_with_contact,
            basic_stats.strikes::INT AS strikes,
            basic_stats.strikes_called::INT AS strikes_called,
            basic_stats.strikes_swinging::INT AS strikes_swinging,
            basic_stats.strikes_foul::INT AS strikes_foul,
            basic_stats.strikes_foul_tip::INT AS strikes_foul_tip,
            basic_stats.strikes_in_play::INT AS strikes_in_play,
            basic_stats.strikes_unknown::INT AS strikes_unknown,
            basic_stats.balls::INT AS balls,
            basic_stats.balls_called::INT AS balls_called,
            basic_stats.balls_intentional::INT AS balls_intentional,
            basic_stats.balls_automatic::INT AS balls_automatic,
            basic_stats.unknown_pitches::INT AS unknown_pitches,
            basic_stats.pitchouts::INT AS pitchouts,
            basic_stats.pitcher_pickoff_attempts::INT AS pitcher_pickoff_attempts,
            basic_stats.catcher_pickoff_attempts::INT AS catcher_pickoff_attempts,
            basic_stats.pitches_blocked_by_catcher::INT AS pitches_blocked_by_catcher,
            basic_stats.pitches_with_runners_going::INT AS pitches_with_runners_going,
            basic_stats.passed_balls::INT AS passed_balls,
            basic_stats.wild_pitches::INT AS wild_pitches,
            basic_stats.balks::INT AS balks,
            basic_stats.left_on_base::INT AS left_on_base,
            basic_stats.left_on_base_with_two_outs::INT AS left_on_base_with_two_outs,
            basic_stats.stolen_bases_second::INT AS stolen_bases_second,
            basic_stats.stolen_bases_third::INT AS stolen_bases_third,
            basic_stats.stolen_bases_home::INT AS stolen_bases_home,
            basic_stats.caught_stealing_second::INT AS caught_stealing_second,
            basic_stats.caught_stealing_third::INT AS caught_stealing_third,
            basic_stats.caught_stealing_home::INT AS caught_stealing_home,
            basic_stats.stolen_base_opportunities::INT AS stolen_base_opportunities,
            basic_stats.stolen_base_opportunities_second::INT AS stolen_base_opportunities_second,
            basic_stats.stolen_base_opportunities_third::INT AS stolen_base_opportunities_third,
            basic_stats.stolen_base_opportunities_home::INT AS stolen_base_opportunities_home,
            basic_stats.picked_off_first::INT AS picked_off_first,
            basic_stats.picked_off_second::INT AS picked_off_second,
            basic_stats.picked_off_third::INT AS picked_off_third,
            basic_stats.times_force_on_runner::INT AS times_force_on_runner,
            basic_stats.times_lead_runner::INT AS times_lead_runner,
            basic_stats.times_next_base_empty::INT AS times_next_base_empty,
            basic_stats.extra_base_chances::INT AS extra_base_chances,
            basic_stats.extra_bases_taken::INT AS extra_bases_taken,
            basic_stats.batting_average,
            basic_stats.on_base_percentage,
            basic_stats.slugging_percentage,
            basic_stats.on_base_plus_slugging,
            basic_stats.isolated_power,
            basic_stats.secondary_average,
            basic_stats.batting_average_on_balls_in_play,
            basic_stats.home_run_rate,
            basic_stats.walk_rate,
            basic_stats.strikeout_rate,
            basic_stats.stolen_base_percentage,COALESCE(event_agg.games / basic_stats.games, 0) AS event_coverage_rate,
            event_agg.known_trajectory_rate_outs,
            event_agg.known_trajectory_rate_hits,
            event_agg.known_trajectory_rate,
            event_agg.known_trajectory_broad_rate_outs,
            event_agg.known_trajectory_broad_rate_hits,
            event_agg.known_trajectory_broad_rate,
            event_agg.known_trajectory_out_hit_ratio,
            event_agg.known_trajectory_broad_out_hit_ratio,
            event_agg.air_ball_rate_outs,
            event_agg.ground_ball_rate_outs,
            event_agg.ground_air_out_ratio,
            event_agg.air_ball_hit_rate,
            event_agg.ground_ball_hit_rate,
            event_agg.ground_air_hit_ratio,
            event_agg.fly_ball_rate,
            event_agg.line_drive_rate,
            event_agg.pop_up_rate,
            event_agg.ground_ball_rate,
            event_agg.coverage_weighted_air_ball_batting_average,
            event_agg.coverage_weighted_ground_ball_batting_average,
            event_agg.coverage_weighted_fly_ball_batting_average,
            event_agg.coverage_weighted_line_drive_batting_average,
            event_agg.coverage_weighted_pop_up_batting_average,
            event_agg.known_angle_rate_outs,
            event_agg.known_angle_rate_hits,
            event_agg.known_angle_rate,
            event_agg.known_angle_out_hit_ratio,
            event_agg.angle_left_rate_outs,
            event_agg.angle_left_rate_hits,
            event_agg.angle_left_rate,
            event_agg.coverage_weighted_angle_left_batting_average,
            event_agg.angle_right_rate_outs,
            event_agg.angle_right_rate_hits,
            event_agg.angle_right_rate,
            event_agg.coverage_weighted_angle_right_batting_average,
            event_agg.angle_middle_rate_outs,
            event_agg.angle_middle_rate_hits,
            event_agg.angle_middle_rate,
            event_agg.coverage_weighted_angle_middle_batting_average,
            event_agg.pulled_rate_outs,
            event_agg.pulled_rate_hits,
            event_agg.pulled_rate,
            event_agg.coverage_weighted_pulled_batting_average,
            event_agg.opposite_field_rate_outs,
            event_agg.opposite_field_rate_hits,
            event_agg.opposite_field_rate,
            event_agg.coverage_weighted_opposite_field_batting_average,
            event_agg.stolen_base_attempt_rate_second,
            event_agg.stolen_base_attempt_rate_third,
            event_agg.stolen_base_attempt_rate_home,
            event_agg.unforced_out_rate,
            event_agg.pitch_strike_rate,
            event_agg.pitch_contact_rate,
            event_agg.pitch_swing_rate,
            event_agg.pitch_ball_rate,
            event_agg.pitch_swing_and_miss_rate,
            event_agg.pitch_foul_rate,
            event_agg.pitched_called_strike_rate,
            event_agg.pitch_data_coverage_rate,FROM basic_stats
        LEFT JOIN event_agg USING (player_id)
    )
    
    SELECT * FROM final
