version: 2


models:
  - name: stg_event_baserunners
    description: |
      Event-level info for each baserunner present at an event.
      This includes all baserunners present at the start of the event,
      as well as the batter if they end up active on the bases during the play.

    config:
      contract:
        enforced: true

    constraints:
      - type: primary_key
        columns: &pk [event_key, baserunner]

    meta:
      primary_keys: *pk

    columns:
      - name: game_id
        description: "{{ doc('game_id') }}"
        data_type: varchar
        constraints:
          - type: not_null
        tests:
          - relationships:
              field: game_id
              to: ref('stg_games')
      - name: event_id
        description: "{{ doc('event_id') }}"
        data_type: utinyint
        constraints:
          - type: not_null
      - name: event_key
        description: "{{ doc('event_key') }}"
        data_type: uinteger
        tests:
          - relationships:
              field: event_key
              to: ref('stg_events')
      - name: baserunner
        description: "{{ doc('baserunner') }}"
        data_type: baserunner
        constraints:
          - type: not_null
      - name: runner_lineup_position
        description: "{{ doc('lineup_position') }}"
        data_type: utinyint
        constraints:
          - type: not_null
      - name: runner_id
        description: "{{ doc('player_id') }}"
        data_type: varchar
        constraints:
          - type: not_null
      - name: charge_event_id
        description: "{{ doc('charge_event_id') }}"
        data_type: uinteger
        constraints:
          - type: not_null
      - name: reached_on_event_id
        description: "{{ doc('reached_on_event_id') }}"
        data_type: uinteger
      - name: explicit_charged_pitcher_id
        description: "{{ doc('explicit_charged_pitcher_id') }}"
        data_type: varchar
      - name: attempted_advance_to_base
        description: |
          Populated for events where the runner attempts to advance to a base.
          In specific cases, this can be identical the initial base, such as when
          a runner is picked off or otherwise put out after trying to get back to the bag.
        data_type: base
      - name: baserunning_play_type
        description: |
          Populated for events that specifically have a baserunning play,
          as opposed to an advance on a batting play. Some plays apply to
          all runners present, while others apply to a specific runner.
          See `seed_baserunning_play_types` for more info.
        data_type: baserunning_play
      - name: is_out
        description: "Whether or not the runner is out at the end of the play"
        data_type: boolean
        constraints:
          - type: not_null
      - name: base_end
        description: "The runner's base at the end of the play, if applicable"
        data_type: base
      - name: advanced_on_error_flag
        description: |
          True if the runner advanced on an error specifically associated
          with a play on this runner, as opposed to a play on the batter.
        data_type: boolean
        constraints:
          - type: not_null
      - name: explicit_out_flag
        description: |
          True if the raw data specifically described the runner as out
          on an advance.
        data_type: boolean
        constraints:
          - type: not_null
      - name: run_scored_flag
        description: "True if the runner scored on the play"
        data_type: boolean
        constraints:
          - type: not_null
      - name: rbi_flag
        description: "True if the runner scored and the batter was credited with the
          RBI"
        data_type: boolean
        constraints:
          - type: not_null
      - name: reached_on_event_key
        description: "{{ doc('reached_on_event_key') }}"
        data_type: uinteger
      - name: charge_event_key
        description: "{{ doc('charge_event_key') }}"
        data_type: uinteger
        constraints:
          - type: not_null
      - name: baserunner_bit
        description: |
          The bitwise representation of the runner's position:
          - 1st: 1 (001)
          - 2nd: 2 (010)
          - 3rd: 4 (100)

          This is a useful way to represent the runner's position
          because you can do a bitwise OR to get the full base state
          for the event.
        data_type: integer
      - name: is_advance_attempt
        description: |
          True if the runner attempted to advance on the play.
          Includes plays where the runner is subject to a force play.
        data_type: boolean
        constraints:
          - type: not_null
